name: Release

on: workflow_dispatch

permissions:
  contents: write

jobs:

  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Tags
        id: tags
        shell: bash
        run: |
          NEW_TAG=$(head -1 VERSION)
          git ls-remote --tags origin
          if git ls-remote --tags origin "$NEW_TAG" | grep -q "$NEW_TAG"; then
            echo "ERROR: Tag $NEW_TAG already exists in the remote repository."
            exit 1
          fi
          MAJOR_MINOR=$(echo $NEW_TAG | cut -d'.' -f1-2)
          PATCH=$(echo $NEW_TAG | cut -d'.' -f3)

          EXISTING_TAGS=$(git ls-remote --tags origin "$MAJOR_MINOR.*" | awk -F'/' '{print $3}')
          for tag in $EXISTING_TAGS; do
            existing_patch=$(echo $tag | cut -d'.' -f3)
            if [ "$existing_patch" -gt "$PATCH" ]; then
              echo "ERROR: A higher patch tag ($MAJOR_MINOR.$existing_patch) already exists (current patch: $PATCH)."
              exit 1
            fi
          done

          echo "semver=${NEW_TAG}" >> $GITHUB_OUTPUT
          echo "major=$(echo $NEW_TAG | cut -d'.' -f1)" >> $GITHUB_OUTPUT

      - name: Create and Push Tags
        id: create_push_tags
        run: |
          git config user.name "GitHub Actions"
          git tag -a "${{ steps.tags.outputs.semver }}" -m "Release ${{ steps.tags.outputs.semver }}"
          git push origin "${{ steps.tags.outputs.semver }}"
          git tag -af "${{ steps.tags.outputs.major }}" -m "Release ${{ steps.tags.outputs.semver }}"
          git push -f origin "${{ steps.tags.outputs.major }}"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          tag_name: ${{ steps.tags.outputs.semver }}
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
          make_latest: true
